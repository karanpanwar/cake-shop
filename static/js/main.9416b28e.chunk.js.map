{"version":3,"sources":["redux/reducers.js","redux/action-types.js","redux/store.js","theme/homepage/homepage.jsx","_component/dialog.jsx","_component/product-card.jsx","theme/shop/shop.jsx","redux/action.js","_component/grid-view.jsx","theme/home.js","redux/selecter.js","serviceWorker.js","index.js","icons/choco.jpg","icons/party.jpg","icons/wedding.jpg"],"names":["setProductsList","key","value","sessionStorage","setItem","JSON","stringify","getProductsList","parse","getItem","initialState","lists","combineReducers","list","state","action","type","product","data","idx","findIndex","item","id","qty","copy","newLists","splice","createStore","rootReducer","Homepage","className","src","party","alt","choco","wedding","React","Component","Dialog","props","Modal","modalProps","aria-labelledby","centered","scrollable","Header","closeButton","Title","title","Body","children","Footer","buttons","map","button","i","Button","variant","onClick","text","ProductCard","closeModal","setState","isProductView","this","image","price","process","style","width","handleOnClick","show","onHide","size","Shop","addProduct","products","index","connect","deleteProduct","updateProductQuantity","useState","showDeleteDialog","setDeleteDialog","Array","isArray","length","Table","striped","bordered","hover","responsive","columns","o","label","row","j","Form","Select","onChange","e","target","Alert","Home","closeCartModal","isCartOpen","homePath","console","log","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Collapse","Nav","to","exact","productsList","path","store","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.9416b28e.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\nimport {\n    ADD_PRODUCT,\n    UPDATE_PRODUCT_QUANTITY,\n    DELETE_PRODUCT,\n} from \"./action-types\";\n\n\nconst setProductsList = (key, value) => {\n    sessionStorage.setItem(key, JSON.stringify(value));\n}\nconst getProductsList = key => {\n    return JSON.parse(sessionStorage.getItem(key));\n}\n\nconst initialState = {\n    lists: getProductsList('productList') ? getProductsList('productList') : [],\n};\n\nconst list = function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_PRODUCT: {\n            const product = action.data;\n            const idx = state.lists.findIndex(item => item.id === product.id);\n            if (idx !== -1) return state;\n            setProductsList('productList', [...state.lists, product]);\n            return {\n                ...state,\n                lists: [...state.lists, product],\n            };\n        }\n        case UPDATE_PRODUCT_QUANTITY: {\n            const {id, qty} = action.data;\n            const copy = {...state};\n            const idx = copy.lists.findIndex(item => item.id === id);\n            const newLists = [...copy.lists];\n            newLists[idx].qty = qty;\n            setProductsList('productList', newLists);\n            return {...state, lists: newLists};\n        }\n        case DELETE_PRODUCT: {\n            const idx = action.idx;\n            const copy = {...state};\n            const newLists = [...copy.lists];\n            newLists.splice(idx, 1);\n            setProductsList('productList', newLists);\n            return {\n                ...state,\n                lists: newLists,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default combineReducers({list});\n","export const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const UPDATE_PRODUCT_QUANTITY = \"UPDATE_PRODUCT_QUANTITY\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";","import {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from \"react\";\r\nimport choco from \"../../icons/choco.jpg\";\r\nimport party from \"../../icons/party.jpg\";\r\nimport wedding from \"../../icons/wedding.jpg\";\r\nimport \"./homepage.css\";\r\n\r\nexport default class Homepage extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"banner-offer\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <h1>WHAT WE OFFER</h1>\r\n                        </div>\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col item d-flex flex-column align-items-center\">\r\n                                <div className=\"cake-img\">\r\n                                    <img src={party} alt=\"cake\"></img>\r\n                                </div>\r\n                                <div className=\"desc\">\r\n                                    <h3>Party cupcake</h3>\r\n                                    <p>\r\n                                        We offer variety of cupcake for any party made with high\r\n                                        quality natural ingredients.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col item d-flex flex-column align-items-center\">\r\n                                <div className=\"cake-img\">\r\n                                    <img src={choco} alt=\"cake\"></img>\r\n                                </div>\r\n                                <div className=\"desc\">\r\n                                    <h3>Choco Cake </h3>\r\n                                    <p>\r\n                                        Nothing tastes better than chocolate cake with variety of\r\n                                        flavour. which is always available at our bakery.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col item d-flex flex-column align-items-center\">\r\n                                <div className=\"cake-img\">\r\n                                    <img src={wedding} alt=\"cake\"></img>\r\n                                </div>\r\n                                <div className=\"desc\">\r\n                                    <h3>Wedding Cake</h3>\r\n                                    <p>\r\n                                        want to make your wedding unforgettable than you need to order\r\n                                        unique wedding cake at sweet bakery.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport Modal from 'react-bootstrap/Modal'\nimport {Button} from \"react-bootstrap\";\n\nfunction Dialog(props) {\n    return (\n        <Modal\n            {...props.modalProps}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            scrollable\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    {props.title}\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                {props.children}\n            </Modal.Body>\n\n            <Modal.Footer>\n                {\n                    props.buttons.map((button, i) => <Button key={i} variant={button.variant}\n                                                             onClick={button.onClick}>{button.text}</Button>)\n                }\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default Dialog;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"./_style.css\";\r\nimport Dialog from \"./dialog\";\r\n\r\nclass ProductCard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isProductView: false,\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({isProductView: false});\r\n    }\r\n\r\n    render() {\r\n        const {id, title, image, price} = this.props.product;\r\n\r\n        return (<>\r\n            <div className=\"col item d-flex flex-column align-items-center\">\r\n                <div className=\"product\" onClick={() => this.setState({isProductView: true})}>\r\n                    <div className=\"cake-img\">\r\n                        <img src={process.env.PUBLIC_URL + image} alt={title}></img>\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                        <h3>{title}</h3>\r\n                        <p className={'price'}>&#8377; {price}</p>\r\n                    </div>\r\n                </div>\r\n                <Button style={{width: '272px'}} onClick={() => this.props.handleOnClick({id, title, price, qty: \"1\"})}\r\n                        variant=\"danger\">\r\n                    Add to Cart\r\n                </Button>\r\n            </div>\r\n            {\r\n                this.state.isProductView &&\r\n                <Dialog\r\n                    title=\"Product View\"\r\n                    buttons={[\r\n                        {onClick: this.closeModal, variant: 'secondary', text: \"Close\"},\r\n                    ]}\r\n                    modalProps={{\r\n                        show: this.state.isProductView,\r\n                        onHide: this.closeModal,\r\n                        size: \"lg\",\r\n                    }}\r\n                >\r\n                    <div className=\"col item d-flex flex-column align-items-center\">\r\n                        <div className=\"product\" onClick={() => this.setState({isProductView: true})}>\r\n                            <div className=\"cake-img\">\r\n                                <img src={process.env.PUBLIC_URL + image} alt={title}></img>\r\n                            </div>\r\n                            <div className=\"desc\">\r\n                                <h3>{title}</h3>\r\n                                <p className={'price'}>&#8377; {price}</p>\r\n                            </div>\r\n                        </div>\r\n                        <Button style={{width: '272px'}}\r\n                                onClick={() => this.props.handleOnClick({id, title, price, qty: \"1\"})}\r\n                                variant=\"danger\">\r\n                            Add to Cart\r\n                        </Button>\r\n                    </div>\r\n                </Dialog>\r\n            }\r\n        </>);\r\n    }\r\n}\r\n\r\nProductCard.propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProductCard;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./shop.css\";\r\nimport ProductCard from \"../../_component/product-card\";\r\nimport {addProduct} from \"../../redux/action\";\r\n\r\nclass Shop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.products = [\r\n            {\r\n                id: 1,\r\n                title: 'Black Forest Cake',\r\n                price: '599',\r\n                image: '/product/black-forest-cake.jpg'\r\n            },\r\n            {\r\n                id: 2,\r\n                title: 'Choco Pineapple Cake',\r\n                price: '799',\r\n                image: '/product/choco-coin-pineapple-cake.jpg'\r\n            },\r\n            {\r\n                id: 3,\r\n                title: 'Crunchy Choco Cake',\r\n                price: '669',\r\n                image: '/product/crunchy_choco_cake.jpg'\r\n            },\r\n            {\r\n                id: 4,\r\n                title: 'Doremon Cake',\r\n                price: '899',\r\n                image: '/product/doremon-cake-1299_1.jpg'\r\n            },\r\n            {\r\n                id: 5,\r\n                title: 'Happy Birthday Cake',\r\n                price: '501',\r\n                image: '/product/happy_birthday_cake.jpg'\r\n            },\r\n            {\r\n                id: 6,\r\n                title: 'Heart Cake',\r\n                price: '1199',\r\n                image: '/product/heart-cake.jpg'\r\n            },\r\n            {\r\n                id: 7,\r\n                title: 'Heart Shaped Cake',\r\n                price: '1599',\r\n                image: '/product/heart-shaped-cake.jpg'\r\n            },\r\n            {\r\n                id: 8,\r\n                title: 'Oreo Cake',\r\n                price: '799',\r\n                image: '/product/oreo-cake-1kg.jpg'\r\n            },\r\n            {\r\n                id: 9,\r\n                title: 'Stunning Barbie Doll Cake',\r\n                price: '2199',\r\n                image: '/product/stunning-barbie-doll-cake.jpg'\r\n            },\r\n            {\r\n                id: 10,\r\n                title: 'Swanky Black Forest Cake',\r\n                price: '2500',\r\n                image: './product/swanky-black-forest-cake.jpg'\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    handleOnClick = product => {\r\n        this.props.addProduct(product)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className={\"container\"}>\r\n                <div className=\"row justify-content-center\">\r\n                    {this.products.map((product, index) => <ProductCard key={index}\r\n                                                                        handleOnClick={() => this.handleOnClick(product)}\r\n                                                                        product={product}/>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, {addProduct})(Shop);\r\n","import {\n    ADD_PRODUCT,\n    UPDATE_PRODUCT_QUANTITY,\n    DELETE_PRODUCT,\n} from \"./action-types\";\n\nexport const addProduct = (data) => ({\n    type: ADD_PRODUCT,\n    data,\n});\n\nexport const updateProductQuantity = (data) => ({\n    type: UPDATE_PRODUCT_QUANTITY,\n    data,\n});\n\nexport const deleteProduct = (idx) => ({\n    type: DELETE_PRODUCT,\n    idx,\n});\n\n\n","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport Form from 'react-bootstrap/Form';\nimport {Table, Alert, Button} from \"react-bootstrap\";\nimport Dialog from \"./dialog\";\nimport {deleteProduct, updateProductQuantity} from \"../redux/action\";\n\nfunction GridView(props) {\n    const [{showDeleteDialog, idx}, setDeleteDialog] = useState({showDeleteDialog: false, idx: -1});\n\n    return (\n        <div className=\"container\">\n            {Array.isArray(props.data) && props.data.length > 0 ? (\n                <Table striped bordered hover responsive>\n                    <thead>\n                    <tr>\n                        {props.columns.map((o) => (\n                            <th key={o.key}>{o.label}</th>\n                        ))}\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.data &&\n                    props.data.map((row, i) => {\n                        return (\n                            <tr key={i}>\n                                {props.columns.map((o, j) => {\n                                    if (o.key === 'qty') {\n                                        return <td key={j}>\n                                            <Form.Select value={row[o.key]}\n                                                         onChange={(e) => props.updateProductQuantity({\n                                                             id: row.id,\n                                                             qty: e.target.value\n                                                         })}>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"5\">4</option>\n                                                <option value=\"5\">5</option>\n                                            </Form.Select>\n                                        </td>\n                                    }\n                                    return <td key={j}>{row[o.key]}</td>\n                                })}\n                                <td>\n                                    <Button\n                                        variant=\"danger\"\n                                        onClick={() => setDeleteDialog({showDeleteDialog: true, idx: i})}\n                                    >\n                                        Delete\n                                    </Button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            ) : (\n                <Alert variant={\"primary\"}>No Product added yet.</Alert>\n            )}\n            <Dialog\n                title={\"Delete Product\"}\n                buttons={[\n                    {\n                        onClick: () => setDeleteDialog({showDeleteDialog: false, idx: -1}),\n                        variant: \"secondary\",\n                        text: \"Close\",\n                    },\n                    {\n                        onClick: () => {\n                            props.deleteProduct(idx);\n                            setDeleteDialog({showDeleteDialog: false, idx: -1});\n                        },\n                        text: \"Delete\",\n                    },\n                ]}\n                modalProps={{\n                    show: showDeleteDialog,\n                    onHide: () => setDeleteDialog({showDeleteDialog: false, idx: -1}),\n                    size: \"sm\",\n                }}\n            >\n                Are you sure you want to delete the product ?\n            </Dialog>\n        </div>\n    );\n}\n\nexport default connect(null, {\n    deleteProduct,\n    updateProductQuantity\n})(GridView);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Button from \"react-bootstrap/Button\"\nimport \"./home.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Homepage from \"./homepage/homepage\";\nimport Shop from \"./shop/shop\";\nimport {\n    Switch,\n    Route,\n    NavLink\n} from \"react-router-dom\";\nimport GridView from \"../_component/grid-view\";\nimport Dialog from \"../_component/dialog\";\nimport {getProductsList} from \"../redux/selecter\";\n\nclass Home extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isCartOpen: false,\n        };\n        this.homePath = process.env.PUBLIC_URL;\n    }\n\n    closeCartModal = () => {\n        this.setState({isCartOpen: false});\n    }\n\n    render() {\n        console.log(this.homePath);\n        return (\n            <>\n                <div className=\"container d-flex flex-row justify-content-between header\">\n                    <div className=\"item address res\">\n                        <span className=\"location\"></span> 523 C Road, Sardarpura Jaipur,\n                        Rajasthan\n                    </div>\n                    <div className=\"item title\">Sweet Bakery</div>\n                    <div className=\"item res\">\n                        <span className=\"button\">Get in Touch</span>\n                    </div>\n                </div>\n                <div className=\"nav-bar-border\">\n                    <div className=\"container\">\n                        <Navbar collapseOnSelect expand=\"sm\">\n                            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                                <Nav className=\"mr-auto\">\n                                    <NavLink to={this.homePath} className={'nav-link'} exact>Home</NavLink>\n                                    <NavLink to={`${this.homePath}/shop`} className={'nav-link'}>Shop</NavLink>\n                                </Nav>\n                                <Button variant=\"light\" onClick={() => this.setState({isCartOpen: !this.state.isCartOpen})}>\n                                    <span className=\"badge badge-pill badge-danger mr-2\">\n                                        {this.props.productsList.length}\n                                    </span> Cart\n                                </Button>\n                            </Navbar.Collapse>\n                        </Navbar>\n                    </div>\n                </div>\n                <Switch>\n                    <Route path={`${this.homePath}/shop`}>\n                        <Shop/>\n                    </Route>\n                    <Route exact path={this.homePath}>\n                        <Homepage/>\n                    </Route>\n                </Switch>\n                <div className={\"footer\"}>\n                    <div className=\"container\">\n                        <hr/>\n                        <div className={\"footer-tag d-flex justify-content-centre\"}>\n                            <p>best cake &copy;2020 Privacy policy</p>\n                            <p className={\"ml-auto\"}>Developed By Karan.</p>\n                        </div>\n                    </div>\n                </div>\n                {\n                    this.state.isCartOpen &&\n                    <Dialog\n                        title=\"Cart\"\n                        buttons={[\n                            {onClick: this.closeCartModal, variant: 'secondary', text: \"Close\"},\n                        ]}\n                        modalProps={{\n                            show: this.state.isCartOpen,\n                            onHide: this.closeCartModal,\n                            size: \"xl\",\n                        }}\n                    >\n                        <GridView\n                            columns={[\n                                {label: \"Product\", key: \"title\"},\n                                {label: \"Price\", key: \"price\"},\n                                {label: \"Quantity\", key: \"qty\"}\n                            ]}\n                            data={this.props.productsList}\n                        />\n                    </Dialog>\n                }\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const productsList = getProductsList(state);\n    return {productsList};\n}\n\nexport default connect(mapStateToProps)(Home);\n","export const getProductsList = store => store.list.lists;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./theme/home.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Home/>\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/choco.f338afd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/party.22a8c458.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wedding.21842ab2.jpg\";"],"sourceRoot":""}